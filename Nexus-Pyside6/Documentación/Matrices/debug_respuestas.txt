=== Log de respuestas crudas de Gemini ===

================================================================================
Prompt:
Eres un experto en QA. Lee el requerimiento funcional y devuelve EXCLUSIVAMENTE un array JSON de objetos. Cada objeto debe tener EXACTAMENTE estas claves:
 - "Nombre"
 - "Descripcion"
 - "Pasos" (array de strings)
 - "Resultado esperado"
 - "Prioridad" (Alta|Media|Baja)

No incluyas explicaciones, ni texto antes o después. Solo el array JSON válido.

CONSIDERA EL SIGUIENTE CONTEXTO:
Contexto general del sistema: Contexto General del Sistema

Sistema de e-commerce "TechZone" para la venta de productos de tecnología. El proyecto tiene un alcance definido que incluye la gestión de la cuenta del usuario, el proceso de compra y el seguimiento del pedido, pero también especifica claramente qué funcionalidades no están incluidas en esta fase.

Core Features (Características principales):

Búsqueda y filtrado de productos: Los usuarios pueden buscar productos por nombre, marca o categoría, y aplicar filtros por precio, disponibilidad o especificaciones técnicas.

Gestión de cuenta de usuario: Registro, inicio de sesión, recuperación de contraseña y gestión de un perfil con información personal, direcciones de envío y métodos de pago.

Carrito de compras: Los usuarios pueden agregar, eliminar y actualizar la cantidad de productos antes de proceder al pago.

Proceso de pago: Un flujo de checkout que procesa pagos con tarjeta de crédito/débito y genera una confirmación de pedido.

Historial de pedidos: Los usuarios pueden ver una lista de todos sus pedidos anteriores, con sus detalles y estado.

Seguimiento de pedidos: Los usuarios pueden ver el estado actual de su pedido (p. ej., "Procesando", "Enviado", "Entregado") y, si está disponible, el número de seguimiento.

Additional Features (Características adicionales):

Lista de deseos (Wishlist): Los usuarios pueden guardar productos para futuras compras.

Reseñas y calificaciones: Los usuarios verificados pueden dejar reseñas y calificar los productos comprados.

Notificaciones por correo electrónico: El sistema envía notificaciones para la confirmación del pedido, el cambio de estado de envío y para recordar reseñas pendientes.

Exclusions (Exclusiones):

Sistema de pagos recurrentes: La funcionalidad para suscripciones o pagos mensuales se implementará en una fase posterior.

Sistema de puntos o recompensas: Los programas de fidelización están fuera del alcance actual del proyecto.

Aplicación móvil nativa: El proyecto se limita a la interfaz web; no se desarrollará una aplicación para iOS o Android.
Flujo del proceso: Flujo del Proceso

El usuario accede al sitio e inicia sesión o se registra.

Navega por el catálogo y usa la búsqueda o los filtros para encontrar productos.

Agrega productos al carrito de compras y/o a su lista de deseos.

Una vez en el carrito, el usuario verifica y ajusta los productos antes de ir al checkout.

Completa los detalles de envío y pago desde su perfil o de forma manual.

El sistema procesa el pago y actualiza el inventario en tiempo real.

Se genera un número de pedido y se envía un correo de confirmación.

El usuario puede ver el estado de su pedido en su historial de compras, el cual se actualiza a medida que el pedido avanza.


REQUERIMIENTO:
Como usuario, quiero poder agregar productos a una lista de deseos. El sistema debe permitirme ver los productos en mi lista, y desde allí, poder moverlos al carrito de compras. La lista debe ser persistente en mi cuenta, incluso si cierro la sesión. 

Respuesta cruda Gemini:
```json
[
  {
    "Nombre": "Agregar producto a lista de deseos",
    "Descripcion": "Como usuario, quiero poder agregar un producto desde la página de detalle del producto a mi lista de deseos.",
    "Pasos": [
      "Navegar a la página de detalle de un producto.",
      "Hacer clic en el botón 'Agregar a lista de deseos'."
    ],
    "Resultado esperado": "El producto se agrega a la lista de deseos del usuario y se muestra un mensaje de confirmación.",
    "Prioridad": "Alta"
  },
  {
    "Nombre": "Ver lista de deseos",
    "Descripcion": "Como usuario, quiero poder ver todos los productos que he agregado a mi lista de deseos.",
    "Pasos": [
      "Acceder a la sección 'Lista de deseos'."
    ],
    "Resultado esperado": "Se muestra una lista con todos los productos agregados a la lista de deseos del usuario.",
    "Prioridad": "Alta"
  },
  {
    "Nombre": "Mover producto de lista de deseos al carrito",
    "Descripcion": "Como usuario, quiero poder mover un producto de mi lista de deseos a mi carrito de compras.",
    "Pasos": [
      "Acceder a la sección 'Lista de deseos'.",
      "Seleccionar el producto que se desea mover.",
      "Hacer clic en el botón 'Agregar al carrito'."
    ],
    "Resultado esperado": "El producto se mueve de la lista de deseos al carrito de compras y se muestra un mensaje de confirmación.",
    "Prioridad": "Alta"
  },
  {
    "Nombre": "Persistencia de la lista de deseos",
    "Descripcion": "Como usuario, quiero que mi lista de deseos se mantenga guardada incluso después de cerrar sesión.",
    "Pasos": [
      "Agregar productos a la lista de deseos.",
      "Cerrar sesión.",
      "Volver a iniciar sesión."
    ],
    "Resultado esperado": "La lista de deseos se mantiene con los productos agregados previamente.",
    "Prioridad": "Alta"
  }
]
```


================================================================================
Prompt:
Eres un experto en QA. Lee el requerimiento funcional y devuelve EXCLUSIVAMENTE un array JSON de objetos. Cada objeto debe tener EXACTAMENTE estas claves:
 - "Nombre"
 - "Descripcion"
 - "Pasos" (array de strings)
 - "Resultado esperado"
 - "Prioridad" (Alta|Media|Baja)

No incluyas explicaciones, ni texto antes o después. Solo el array JSON válido.

CONSIDERA EL SIGUIENTE CONTEXTO:
Contexto general del sistema: Contexto General del Sistema

Sistema de e-commerce "TechZone" para la venta de productos de tecnología. El proyecto tiene un alcance definido que incluye la gestión de la cuenta del usuario, el proceso de compra y el seguimiento del pedido, pero también especifica claramente qué funcionalidades no están incluidas en esta fase.

Core Features (Características principales):

Búsqueda y filtrado de productos: Los usuarios pueden buscar productos por nombre, marca o categoría, y aplicar filtros por precio, disponibilidad o especificaciones técnicas.

Gestión de cuenta de usuario: Registro, inicio de sesión, recuperación de contraseña y gestión de un perfil con información personal, direcciones de envío y métodos de pago.

Carrito de compras: Los usuarios pueden agregar, eliminar y actualizar la cantidad de productos antes de proceder al pago.

Proceso de pago: Un flujo de checkout que procesa pagos con tarjeta de crédito/débito y genera una confirmación de pedido.

Historial de pedidos: Los usuarios pueden ver una lista de todos sus pedidos anteriores, con sus detalles y estado.

Seguimiento de pedidos: Los usuarios pueden ver el estado actual de su pedido (p. ej., "Procesando", "Enviado", "Entregado") y, si está disponible, el número de seguimiento.

Additional Features (Características adicionales):

Lista de deseos (Wishlist): Los usuarios pueden guardar productos para futuras compras.

Reseñas y calificaciones: Los usuarios verificados pueden dejar reseñas y calificar los productos comprados.

Notificaciones por correo electrónico: El sistema envía notificaciones para la confirmación del pedido, el cambio de estado de envío y para recordar reseñas pendientes.

Exclusions (Exclusiones):

Sistema de pagos recurrentes: La funcionalidad para suscripciones o pagos mensuales se implementará en una fase posterior.

Sistema de puntos o recompensas: Los programas de fidelización están fuera del alcance actual del proyecto.

Aplicación móvil nativa: El proyecto se limita a la interfaz web; no se desarrollará una aplicación para iOS o Android.
Flujo del proceso: Flujo del Proceso

El usuario accede al sitio e inicia sesión o se registra.

Navega por el catálogo y usa la búsqueda o los filtros para encontrar productos.

Agrega productos al carrito de compras y/o a su lista de deseos.

Una vez en el carrito, el usuario verifica y ajusta los productos antes de ir al checkout.

Completa los detalles de envío y pago desde su perfil o de forma manual.

El sistema procesa el pago y actualiza el inventario en tiempo real.

Se genera un número de pedido y se envía un correo de confirmación.

El usuario puede ver el estado de su pedido en su historial de compras, el cual se actualiza a medida que el pedido avanza.


REQUERIMIENTO:
Como usuario, quiero buscar un producto por múltiples criterios al mismo tiempo (por ejemplo, "teléfono" y "marca Samsung"). El sistema debe permitirme refinar los resultados de la búsqueda con filtros por rango de precio, valoración de reseñas (de 4 estrellas o más) y disponibilidad. 

Respuesta cruda Gemini:
```json
[
  {
    "Nombre": "Búsqueda de productos con múltiples criterios y filtros",
    "Descripcion": "Como usuario, quiero buscar productos usando múltiples criterios (ej: nombre y marca) y refinar resultados con filtros de precio, valoración y disponibilidad.",
    "Pasos": [
      "Acceder a la página de búsqueda de productos.",
      "Ingresar múltiples criterios de búsqueda en los campos correspondientes (ej: 'teléfono' y 'marca Samsung').",
      "Aplicar filtros de rango de precio (ej: entre $500 y $1000).",
      "Aplicar filtro de valoración de reseñas (ej: 4 estrellas o más).",
      "Aplicar filtro de disponibilidad (ej: 'En stock').",
      "Revisar los resultados de la búsqueda."
    ],
    "Resultado esperado": "Se muestran solo los productos que coinciden con todos los criterios de búsqueda y filtros aplicados.",
    "Prioridad": "Alta"
  }
]
```


================================================================================
Prompt:
Eres un experto en QA. Lee el requerimiento funcional y devuelve EXCLUSIVAMENTE un array JSON de objetos. Cada objeto debe tener EXACTAMENTE estas claves:
 - "Nombre"
 - "Descripcion"
 - "Pasos" (array de strings)
 - "Resultado esperado"
 - "Prioridad" (Alta|Media|Baja)

No incluyas explicaciones, ni texto antes o después. Solo el array JSON válido.

CONSIDERA EL SIGUIENTE CONTEXTO:
Contexto general del sistema: Contexto General del Sistema

Sistema de e-commerce "TechZone" para la venta de productos de tecnología. El proyecto tiene un alcance definido que incluye la gestión de la cuenta del usuario, el proceso de compra y el seguimiento del pedido, pero también especifica claramente qué funcionalidades no están incluidas en esta fase.

Core Features (Características principales):

Búsqueda y filtrado de productos: Los usuarios pueden buscar productos por nombre, marca o categoría, y aplicar filtros por precio, disponibilidad o especificaciones técnicas.

Gestión de cuenta de usuario: Registro, inicio de sesión, recuperación de contraseña y gestión de un perfil con información personal, direcciones de envío y métodos de pago.

Carrito de compras: Los usuarios pueden agregar, eliminar y actualizar la cantidad de productos antes de proceder al pago.

Proceso de pago: Un flujo de checkout que procesa pagos con tarjeta de crédito/débito y genera una confirmación de pedido.

Historial de pedidos: Los usuarios pueden ver una lista de todos sus pedidos anteriores, con sus detalles y estado.

Seguimiento de pedidos: Los usuarios pueden ver el estado actual de su pedido (p. ej., "Procesando", "Enviado", "Entregado") y, si está disponible, el número de seguimiento.

Additional Features (Características adicionales):

Lista de deseos (Wishlist): Los usuarios pueden guardar productos para futuras compras.

Reseñas y calificaciones: Los usuarios verificados pueden dejar reseñas y calificar los productos comprados.

Notificaciones por correo electrónico: El sistema envía notificaciones para la confirmación del pedido, el cambio de estado de envío y para recordar reseñas pendientes.

Exclusions (Exclusiones):

Sistema de pagos recurrentes: La funcionalidad para suscripciones o pagos mensuales se implementará en una fase posterior.

Sistema de puntos o recompensas: Los programas de fidelización están fuera del alcance actual del proyecto.

Aplicación móvil nativa: El proyecto se limita a la interfaz web; no se desarrollará una aplicación para iOS o Android.
Flujo del proceso: Flujo del Proceso

El usuario accede al sitio e inicia sesión o se registra.

Navega por el catálogo y usa la búsqueda o los filtros para encontrar productos.

Agrega productos al carrito de compras y/o a su lista de deseos.

Una vez en el carrito, el usuario verifica y ajusta los productos antes de ir al checkout.

Completa los detalles de envío y pago desde su perfil o de forma manual.

El sistema procesa el pago y actualiza el inventario en tiempo real.

Se genera un número de pedido y se envía un correo de confirmación.

El usuario puede ver el estado de su pedido en su historial de compras, el cual se actualiza a medida que el pedido avanza.


REQUERIMIENTO:
Como usuario, al proceder al pago, quiero poder seleccionar una dirección de envío de mi perfil. El sistema debe permitirme agregar una nueva dirección si es necesario. El resumen del pedido debe mostrar el costo total, incluyendo impuestos y gastos de envío, antes de la confirmación final. 

Respuesta cruda Gemini:
```json
[
  {
    "Nombre": "Seleccionar dirección de envío existente",
    "Descripcion": "Seleccionar una dirección de envío guardada en el perfil del usuario durante el proceso de pago.",
    "Pasos": [
      "Ir al carrito de compras.",
      "Iniciar el proceso de pago.",
      "En la sección de envío, seleccionar una dirección existente de la lista desplegable.",
      "Confirmar la selección."
    ],
    "Resultado esperado": "Se selecciona la dirección de envío y se muestra en el resumen del pedido.",
    "Prioridad": "Alta"
  },
  {
    "Nombre": "Agregar nueva dirección de envío",
    "Descripcion": "Agregar una nueva dirección de envío al perfil del usuario durante el proceso de pago.",
    "Pasos": [
      "Ir al carrito de compras.",
      "Iniciar el proceso de pago.",
      "En la sección de envío, seleccionar la opción 'Agregar nueva dirección'.",
      "Completar el formulario con la nueva información de la dirección.",
      "Guardar la nueva dirección."
    ],
    "Resultado esperado": "Se guarda la nueva dirección en el perfil del usuario y se selecciona como dirección de envío.",
    "Prioridad": "Alta"
  },
  {
    "Nombre": "Mostrar resumen del pedido con costos totales",
    "Descripcion": "Mostrar un resumen del pedido que incluya el costo total, impuestos y gastos de envío antes de la confirmación final.",
    "Pasos": [
      "Ir al carrito de compras.",
      "Iniciar el proceso de pago.",
      "Revisar la página de resumen del pedido.",
    ],
    "Resultado esperado": "Se muestra un resumen claro del pedido con el costo total, incluyendo impuestos y gastos de envío, antes de la confirmación final.",
    "Prioridad": "Alta"
  }
]
```


[ERROR] Illegal trailing comma before end of array: line 33 column 49 (char 1481)

================================================================================
Prompt:
Eres un experto en QA. Lee el requerimiento funcional y devuelve EXCLUSIVAMENTE un array JSON de objetos. Cada objeto debe tener EXACTAMENTE estas claves:
 - "Nombre"
 - "Descripcion"
 - "Pasos" (array de strings)
 - "Resultado esperado"
 - "Prioridad" (Alta|Media|Baja)

No incluyas explicaciones, ni texto antes o después. Solo el array JSON válido.

CONSIDERA EL SIGUIENTE CONTEXTO:
Contexto general del sistema: Contexto General del Sistema

Sistema de e-commerce "TechZone" para la venta de productos de tecnología. El proyecto tiene un alcance definido que incluye la gestión de la cuenta del usuario, el proceso de compra y el seguimiento del pedido, pero también especifica claramente qué funcionalidades no están incluidas en esta fase.

Core Features (Características principales):

Búsqueda y filtrado de productos: Los usuarios pueden buscar productos por nombre, marca o categoría, y aplicar filtros por precio, disponibilidad o especificaciones técnicas.

Gestión de cuenta de usuario: Registro, inicio de sesión, recuperación de contraseña y gestión de un perfil con información personal, direcciones de envío y métodos de pago.

Carrito de compras: Los usuarios pueden agregar, eliminar y actualizar la cantidad de productos antes de proceder al pago.

Proceso de pago: Un flujo de checkout que procesa pagos con tarjeta de crédito/débito y genera una confirmación de pedido.

Historial de pedidos: Los usuarios pueden ver una lista de todos sus pedidos anteriores, con sus detalles y estado.

Seguimiento de pedidos: Los usuarios pueden ver el estado actual de su pedido (p. ej., "Procesando", "Enviado", "Entregado") y, si está disponible, el número de seguimiento.

Additional Features (Características adicionales):

Lista de deseos (Wishlist): Los usuarios pueden guardar productos para futuras compras.

Reseñas y calificaciones: Los usuarios verificados pueden dejar reseñas y calificar los productos comprados.

Notificaciones por correo electrónico: El sistema envía notificaciones para la confirmación del pedido, el cambio de estado de envío y para recordar reseñas pendientes.

Exclusions (Exclusiones):

Sistema de pagos recurrentes: La funcionalidad para suscripciones o pagos mensuales se implementará en una fase posterior.

Sistema de puntos o recompensas: Los programas de fidelización están fuera del alcance actual del proyecto.

Aplicación móvil nativa: El proyecto se limita a la interfaz web; no se desarrollará una aplicación para iOS o Android.
Flujo del proceso: Flujo del Proceso

El usuario accede al sitio e inicia sesión o se registra.

Navega por el catálogo y usa la búsqueda o los filtros para encontrar productos.

Agrega productos al carrito de compras y/o a su lista de deseos.

Una vez en el carrito, el usuario verifica y ajusta los productos antes de ir al checkout.

Completa los detalles de envío y pago desde su perfil o de forma manual.

El sistema procesa el pago y actualiza el inventario en tiempo real.

Se genera un número de pedido y se envía un correo de confirmación.

El usuario puede ver el estado de su pedido en su historial de compras, el cual se actualiza a medida que el pedido avanza.


REQUERIMIENTO:
Como usuario que ha comprado un producto, quiero poder dejar una reseña y calificarlo con un puntaje de 1 a 5 estrellas. El sistema debe validar que solo los usuarios que hayan comprado el producto puedan dejar una reseña. Las reseñas deben ser visibles para todos los visitantes del sitio. 

Respuesta cruda Gemini:
```json
[
  {
    "Nombre": "Dejar reseña de producto",
    "Descripcion": "Permitir a usuarios registrados que hayan comprado un producto dejar una reseña y calificación.",
    "Pasos": [
      "Acceder al sitio web de TechZone.",
      "Iniciar sesión con una cuenta de usuario.",
      "Navegar a la página del producto comprado.",
      "Localizar la sección de reseñas.",
      "Escribir la reseña en el campo de texto.",
      "Seleccionar una calificación de estrellas (1 a 5).",
      "Enviar la reseña."
    ],
    "Resultado esperado": "La reseña y la calificación del usuario se muestran en la página del producto para todos los visitantes. El sistema verifica que el usuario haya comprado previamente el producto.",
    "Prioridad": "Alta"
  },
  {
    "Nombre": "Validación de usuario para reseña",
    "Descripcion": "Verificar que solo usuarios que hayan comprado el producto puedan dejar una reseña.",
    "Pasos": [
      "Usuario intenta dejar una reseña de un producto sin haberlo comprado.",
      "El sistema verifica el historial de compras del usuario."
    ],
    "Resultado esperado": "Si el usuario no ha comprado el producto, el sistema le impide dejar una reseña y muestra un mensaje de error.",
    "Prioridad": "Alta"
  },
  {
    "Nombre": "Visualización de reseñas",
    "Descripcion": "Mostrar las reseñas de los usuarios en la página del producto.",
    "Pasos": [
      "Visitar la página de un producto con reseñas existentes."
    ],
    "Resultado esperado": "Las reseñas, junto con la calificación de estrellas, son visibles para todos los visitantes.",
    "Prioridad": "Media"
  }
]
```


================================================================================
Prompt:
Eres un experto en QA. Lee el requerimiento funcional y devuelve EXCLUSIVAMENTE un array JSON de objetos. Cada objeto debe tener EXACTAMENTE estas claves:
 - "Nombre"
 - "Descripcion"
 - "Pasos" (array de strings)
 - "Resultado esperado"
 - "Prioridad" (Alta|Media|Baja)

No incluyas explicaciones, ni texto antes o después. Solo el array JSON válido.

CONSIDERA EL SIGUIENTE CONTEXTO:
Contexto general del sistema: Contexto General del Sistema

Sistema de e-commerce "TechZone" para la venta de productos de tecnología. El proyecto tiene un alcance definido que incluye la gestión de la cuenta del usuario, el proceso de compra y el seguimiento del pedido, pero también especifica claramente qué funcionalidades no están incluidas en esta fase.

Core Features (Características principales):

Búsqueda y filtrado de productos: Los usuarios pueden buscar productos por nombre, marca o categoría, y aplicar filtros por precio, disponibilidad o especificaciones técnicas.

Gestión de cuenta de usuario: Registro, inicio de sesión, recuperación de contraseña y gestión de un perfil con información personal, direcciones de envío y métodos de pago.

Carrito de compras: Los usuarios pueden agregar, eliminar y actualizar la cantidad de productos antes de proceder al pago.

Proceso de pago: Un flujo de checkout que procesa pagos con tarjeta de crédito/débito y genera una confirmación de pedido.

Historial de pedidos: Los usuarios pueden ver una lista de todos sus pedidos anteriores, con sus detalles y estado.

Seguimiento de pedidos: Los usuarios pueden ver el estado actual de su pedido (p. ej., "Procesando", "Enviado", "Entregado") y, si está disponible, el número de seguimiento.

Additional Features (Características adicionales):

Lista de deseos (Wishlist): Los usuarios pueden guardar productos para futuras compras.

Reseñas y calificaciones: Los usuarios verificados pueden dejar reseñas y calificar los productos comprados.

Notificaciones por correo electrónico: El sistema envía notificaciones para la confirmación del pedido, el cambio de estado de envío y para recordar reseñas pendientes.

Exclusions (Exclusiones):

Sistema de pagos recurrentes: La funcionalidad para suscripciones o pagos mensuales se implementará en una fase posterior.

Sistema de puntos o recompensas: Los programas de fidelización están fuera del alcance actual del proyecto.

Aplicación móvil nativa: El proyecto se limita a la interfaz web; no se desarrollará una aplicación para iOS o Android.
Flujo del proceso: Flujo del Proceso

El usuario accede al sitio e inicia sesión o se registra.

Navega por el catálogo y usa la búsqueda o los filtros para encontrar productos.

Agrega productos al carrito de compras y/o a su lista de deseos.

Una vez en el carrito, el usuario verifica y ajusta los productos antes de ir al checkout.

Completa los detalles de envío y pago desde su perfil o de forma manual.

El sistema procesa el pago y actualiza el inventario en tiempo real.

Se genera un número de pedido y se envía un correo de confirmación.

El usuario puede ver el estado de su pedido en su historial de compras, el cual se actualiza a medida que el pedido avanza.


REQUERIMIENTO:
Como usuario, quiero ver el estado de mi pedido en tiempo real. El sistema debe mostrar el estado actual ("Pendiente", "Procesando", "Enviado", "Entregado") en mi historial de pedidos. Además, para los pedidos "Enviados", el sistema debe mostrar el número de seguimiento y un enlace a la página de la compañía de paquetería. 

Respuesta cruda Gemini:
```json
[
  {
    "Nombre": "Visualizar estado del pedido",
    "Descripcion": "Como usuario, quiero ver el estado de mi pedido en tiempo real para poder realizar un seguimiento del mismo.",
    "Pasos": [
      "Acceder a la sección 'Historial de pedidos'",
      "Seleccionar un pedido de la lista"
    ],
    "Resultado esperado": "Se muestra el estado del pedido ('Pendiente', 'Procesando', 'Enviado', 'Entregado'). Si el estado es 'Enviado', se muestra además el número de seguimiento y un enlace a la página de la compañía de paquetería.",
    "Prioridad": "Alta"
  },
  {
    "Nombre": "Mostrar número de seguimiento",
    "Descripcion": "Como usuario, quiero ver el número de seguimiento de mi pedido una vez que este ha sido enviado.",
    "Pasos": [
      "Acceder a la sección 'Historial de pedidos'",
      "Seleccionar un pedido con estado 'Enviado'"
    ],
    "Resultado esperado": "Se muestra el número de seguimiento del pedido.",
    "Prioridad": "Alta"
  },
  {
    "Nombre": "Enlace a página de paquetería",
    "Descripcion": "Como usuario, quiero poder acceder directamente a la página web de la empresa de paquetería para realizar un seguimiento más detallado de mi envío.",
    "Pasos": [
      "Acceder a la sección 'Historial de pedidos'",
      "Seleccionar un pedido con estado 'Enviado'",
      "Hacer clic en el enlace de la compañía de paquetería"
    ],
    "Resultado esperado": "Se redirige al usuario a la página web de la empresa de paquetería correspondiente al número de seguimiento.",
    "Prioridad": "Media"
  }
]
```

